{"version":3,"sources":["components/ImageGallery/ImageGalleryItem.module.css","components/ButtonLoadMore/ButtonLoadMore.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/API.js","components/ImagesInfo/ImagesInfo.js","components/ImageGallery/ImageGalleryItem.js","components/ButtonLoadMore/ButtonLoadMore.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","searchbar","searchForm","event","preventDefault","trim","toast","error","type","button","buttonLabel","input","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","axios","defaults","baseURL","params","key","image_type","orientation","per_page","api","getImages","page","a","console","log","get","res","data","hits","Status","ImageInfo","request","setImages","setNextPage","images","setError","status","setStatus","useEffect","APIservice","then","prevState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","margin","color","height","width","timeout","ImageGalleryItem","imageData","largeImageURL","tags","src","alt","image","ButtonLoadMore","classNames","Button","ButtonPosition","onClick","ImageGallery","map","img","id","modalRoot","getElementById","Modal","onClose","handleKeyDown","e","code","addEventListener","removeEventListener","createPortal","Overlay","target","App","setRequest","picture","setPicture","setPage","showModal","setShowModal","toogleModal","nodeName","currentSrc","resetPage","length","autoClose","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f72a593e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__NBhst\",\"image\":\"ImageGalleryItem_image__3DEDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ButtonLoadMore_Button__2G7q8\",\"ButtonPosition\":\"ButtonLoadMore_ButtonPosition__2uMuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1DgdF\",\"Modal\":\"Modal_Modal__OIUyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1XXr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__sJHIg\",\"searchForm\":\"Searchbar_searchForm__1k_oB\",\"button\":\"Searchbar_button__30XT2\",\"buttonLabel\":\"Searchbar_buttonLabel__1tEng\",\"input\":\"Searchbar_input__2LOOR\"};","import React, { useState } from \"react\";\nimport styles from \"./Searchbar.module.css\";\nimport { toast } from \"react-toastify\";\nimport propTypes from \"prop-types\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState(\"\");\n\n  function handleQueryChange(event) {\n    setQuery(event.currentTarget.value.toLowerCase());\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      toast.error(\"Enter your request\");\n      return;\n    }\n    onSubmit(query);\n    setQuery(\"\");\n  }\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          name=\"request\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n};\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"18616543-61f088c3928fc4bac834774e6\";\r\nconst BASE_URL = `https://pixabay.com/api/`;\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: \"Photo\",\r\n  orientation: \"horizontal\",\r\n  per_page: 12,\r\n};\r\n\r\nconst getImages = async (query, page) => {\r\n  console.log(query);\r\n  console.log(page);\r\n  try {\r\n    const res = await axios.get(`?page=${page}&q=${query}`);\r\n    return res.data.hits;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return [];\r\n  }\r\n};\r\n\r\nconst api = {\r\n  getImages,\r\n};\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\nimport APIservice from \"../../services/API\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport propTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nexport default function ImageInfo({\n  request,\n  page,\n  setNextPage,\n  images,\n  setImages,\n}) {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    if (!request) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n    APIservice.getImages(request, page)\n      .then((images) => {\n        setImages((prevState) => [...prevState, ...images]);\n\n        if (images) {\n          setStatus(Status.RESOLVED);\n          if (page > 1) {\n            scrollPage();\n          }\n          return;\n        }\n        setStatus(Status.REJECTED);\n      })\n      .catch((error) => setError(error));\n  }, [request, page, setImages]);\n\n  if (status === \"idle\") {\n    return null;\n  }\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"Loader\">\n        <Loader\n          margin=\"0 auto\"\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n\n  if (status === \"rejected\") {\n    toast.error(error);\n    return;\n  }\n\n  if (status === \"resolved\") {\n    return null;\n  }\n}\n\nImageInfo.propTypes = {\n  setNextPage: propTypes.func.isRequired,\n  page: propTypes.number.isRequired,\n  request: propTypes.string.isRequired,\n};\n","import styles from \"./ImageGalleryItem.module.css\";\nimport propTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ imageData }) => {\n  const { largeImageURL, tags } = imageData;\n  return (\n    <li className={styles.ImageGalleryItem}>\n      <img src={largeImageURL} alt={tags} className={styles.image} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  imageData: propTypes.object.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import styles from \"./ButtonLoadMore.module.css\";\nimport classNames from \"classnames\";\nimport propTypes from \"prop-types\";\n\nconst ButtonLoadMore = ({ setNextPage }) => {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(styles.Button, styles.ButtonPosition)}\n      onClick={setNextPage}\n    >\n      Load more\n    </button>\n  );\n};\n\nButtonLoadMore.propTypes = {\n  setNextPage: propTypes.func.isRequired,\n};\n\nexport default ButtonLoadMore;\n","import styles from \"./ImageGallery.module.css\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport ButtonLoadMore from \"../ButtonLoadMore/ButtonLoadMore\";\nimport propTypes from \"prop-types\";\n\nconst ImageGallery = ({ images, setNextPage }) => {\n  return (\n    <div>\n      <ul className={styles.ImageGallery}>\n        {images.map((img) => (\n          <ImageGalleryItem key={img.id} imageData={img}></ImageGalleryItem>\n        ))}\n      </ul>\n      <ButtonLoadMore setNextPage={setNextPage}></ButtonLoadMore>\n    </div>\n  );\n};\n\nImageGallery.propTypes = {\n  setNextPage: propTypes.func.isRequired,\n  images: propTypes.arrayOf(propTypes.object.isRequired),\n};\n\nexport default ImageGallery;\n","import styles from \"./Modal.module.css\";\nimport { createPortal } from \"react-dom\";\nimport { useEffect } from \"react\";\nimport propTypes from \"prop-types\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nexport default function Modal({ onClose, image }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  function handleKeyDown(e) {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  }\n\n  function handleBackDrop(e) {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  }\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleBackDrop}>\n      <div className={styles.Modal}>\n        <img src={image} alt=\"modal image\" />\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: propTypes.func.isRequired,\n  image: propTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImagesInfo from \"./components/ImagesInfo/ImagesInfo\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal/Modal\";\n\nexport default function App() {\n  const [request, setRequest] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [images, setImages] = useState([]);\n\n  const handleFormSubmit = (request) => {\n    setImages([]);\n    setPage(1);\n    setRequest(request);\n  };\n\n  const choosePicture = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    setPicture(e.target.currentSrc);\n    toogleModal();\n  };\n\n  const toogleModal = () => {\n    setShowModal((showModal) => !showModal);\n  };\n\n  const setNextPage = () => {\n    console.log(\"setNExtPage worked\");\n    setPage((prevState) => prevState + 1);\n  };\n\n  const resetPage = () => {\n    setPage(1);\n  };\n\n  return (\n    <div onClick={choosePicture} className=\"App\">\n      {showModal && <Modal image={picture} onClose={toogleModal}></Modal>}\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      <ImagesInfo\n        request={request}\n        page={page}\n        setNextPage={setNextPage}\n        resetPage={resetPage}\n        images={images}\n        setImages={setImages}\n      />\n      {images.length > 0 && (\n        <ImageGallery images={images} setNextPage={setNextPage} />\n      )}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}